import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

apply plugin: 'com.android.library'

apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'

dependencies {
  compile 'org.aspectj:aspectjrt:1.8.1'
  compile project(':alfred-annotations')
}

android {
  compileSdkVersion 20
  buildToolsVersion '20.0.0'

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
}


configurations {
    archives
}

android.libraryVariants.all { variant ->
  LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
  JavaCompile javaCompile = variant.javaCompile
  javaCompile.doLast {
    String[] args = [
        "-showWeaveInfo",
        "-1.5",
        "-inpath", javaCompile.destinationDir.toString(),
        "-aspectpath", javaCompile.classpath.asPath,
        "-d", javaCompile.destinationDir.toString(),
        "-classpath", javaCompile.classpath.asPath,
        "-bootclasspath", plugin.bootClasspath.join(File.pathSeparator)
    ]

    MessageHandler handler = new MessageHandler(true);
    new Main().run(args, handler)

    def log = project.logger
    for (IMessage message : handler.getMessages(null, true)) {
      switch (message.getKind()) {
        case IMessage.ABORT:
        case IMessage.ERROR:
        case IMessage.FAIL:
          log.error message.message, message.thrown
          break;
        case IMessage.WARNING:
        case IMessage.INFO:
          log.info message.message, message.thrown
          break;
        case IMessage.DEBUG:
          log.debug message.message, message.thrown
          break;
      }
    }
  }
}

// Use Maven to install the aar into our local maven repo. Quick and easy (and dirty).
task install(type: Exec, dependsOn: assemble) {
  executable = 'mvn'
  args = [
      "install:install-file",
      "-DgroupId=com.ubiquoid.alfred",
      "-DartifactId=alfred-runtime",
      "-Dversion=${version}",
      "-Dpackaging=aar",
      "-Dfile=build/outputs/aar/alfred-runtime-${version}.aar"
  ]
}

//apply from: 'https://raw.github.com/chrisbanes/gradle-mvn-push/master/gradle-mvn-push.gradle'

// Maven and bintray stuff
/* aar
bintray {
    user bintray_user
    key bintray_pass

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = false //If version should be auto published after an upload

    configurations = [ 'archives' ]

    pkg {
        repo = 'maven'
        name = 'alfred'
        desc = 'Annotation-triggered helpers'
        websiteUrl = 'https://github.com/galex/alfred/'
        issueTrackerUrl = 'https://github.com/galex/alfred/issues'
        vcsUrl = 'https://github.com/galex/alfred/'
        licenses = ['Apache-2.0']
        labels = ['android', 'alfred','annotations']
        publicDownloadNumbers = true
        //publications = ['mavenJava']
        //Optional version descriptor
        version {
            name = '0.2'
            //desc = 'optional, version-specific description'
            //released  = 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = '0.2'
        }
    }
}*/

task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

/*task androidReleaseJar(type: Jar, dependsOn: assembleRelease) {
    from "$buildDir/classes/release/"
}*/

/*artifacts {
    archives androidSourcesJar
    archives androidJavadocsJar
}*/

publishing {
    publications {
        mavenJava(MavenPublication) {

            groupId 'com.ubiquoid.alfred'
            artifactId 'alfred-runtime'
            version '0.2'

            artifact androidSourcesJar {
                classifier "sources"
            }

            artifact androidJavadocsJar {
                classifier "javadoc"
            }
        }
    }
}

bintray {
    user bintray_user
    key bintray_pass

    dryRun = false //Whether to run this as dry-run, without deploying
    publish = false //If version should be auto published after an upload

    configurations = [ 'archives' ]
    publications = ['mavenJava']

    pkg {
        repo = 'maven'
        name = 'alfred'
        desc = 'Annotation-triggered helpers'
        websiteUrl = 'https://github.com/galex/alfred/'
        issueTrackerUrl = 'https://github.com/galex/alfred/issues'
        vcsUrl = 'https://github.com/galex/alfred/'
        licenses = ['Apache-2.0']
        labels = ['android', 'alfred', 'annotations']
        publicDownloadNumbers = true

        //Optional version descriptor
        version {
            name = '0.2'
            //desc = 'optional, version-specific description'
            //released  = 'optional, date of the version release' //2 possible values: date in the format of 'yyyy-MM-dd'T'HH:mm:ss.SSSZZ' OR a java.util.Date instance
            vcsTag = '0.2'
        }
    }
}